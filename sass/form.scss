@import 'core/helpers.scss';

@include cssvars((
	// general
	placeholder-color: #999999,
	form-field-margin-bottom: 24px,
	form-caption-font-size: .8em, 
	// fieldset
	fieldset-border-style: solid,
	fieldset-border-width: 1px,
	fieldset-border-color: rgba(127,127,127,.4),
	// label
	label-font-size: 1em,
	label-font-weight: 600,
	label-margin-bottom: 24px,
	// input
	input-height: 40px,
	input-box-shadow: none,
	input-padding: 8px 16px,
	input-border-style: solid,
	input-border-radius: none,
	input-border-width: 0 0 2px 0,
	input-border-color: rgba(127,127,127,.4),
	input-background-color: rgba(200,200,200,.1),
	// switches
	input-switch-size: 24px,
	input-switch-border-width: 2px,
	// textarea
	textarea-padding: 16px,
	textarea-min-height: 100px,
));

@include superclass () {
	fieldset {
		padding: 12px;
		border-style: cssvar(fieldset-border-style);
		border-width: cssvar(fieldset-border-width);
		border-color: cssvar(fieldset-border-color);
		border-radius: cssvar(input-border-radius);
		legend {
			padding: 0 10px;
			color: cssvar(primary-color);
		}
	}

	.field, fieldset {
		width: 100%;
		display: block;
		margin-bottom: cssvar(form-field-margin-bottom);
	}
	
	label, legend, .label, .legend {
		display: block;
		color: cssvar(app-text-color);
		font-weight: cssvar(label-font-weight);
		margin-bottom: cssvar(label-margin-bottom);
		&[data-holder] {
			font-weight: 300;
			margin: 0 4px;
			align-items: center;
			display: inline-flex;
			height: cssvar(input-height);
		}    
		&.required {
			&::after {
				content: '*';
				margin-left: 8px;
				color: cssvar(color-error);
			}
		}
	}
	
	// text inputs
	$text_inputs: "input:not([type="range"]):not([type="button"]):not([type="reset"]):not([type="submit"]):not([type="checkbox"]):not([type="radio"])";
	
	#{$text_inputs}, textarea {
		appearance: none;
	}
	
	#{$text_inputs}, textarea, select, {
		width: 100%;
		display: block;
		box-sizing: border-box;
		height: cssvar(input-height);
		padding: cssvar(input-padding);
		box-shadow: cssvar(input-box-shadow);
		border-style: cssvar(input-border-style);
		border-color: cssvar(input-border-color);   
		border-width: cssvar(input-border-width);
		border-radius: cssvar(input-border-radius);
		background-color: cssvar(input-background-color);
		&:focus {
			outline: 0;
			@include cssvar(input-border-color, cssvar(primary-color));
		}
	}
	
	textarea {
		display: block;
		padding: cssvar(textarea-padding);
		min-height: cssvar(textarea-min-height);
	}

	// color

	input[type="color"] {
    border: none;
		background: none;
		--input-padding: 0;
		--input-border-width: 0;
		--input-background-color: transparent;
	}
	
	// radio & checkbox
	
	input[type="radio"],
	input[type="checkbox"] {
		margin: 0 8px;
		cursor: pointer;
		appearance: none;
		position: relative;
		display: inline-block;
		width: cssvar(input-switch-size);
		height: cssvar(input-switch-size);
		border: solid cssvar(input-switch-border-width); 
		border-color: cssvar(input-border-color);
		&::before {
			top: 2px;
			left: 2px;
			content: "";
			opacity: 0;
			visibility: hidden;
			position: absolute;
			background-color: cssvar(primary-color);
			height: calc(100% - 4px);
			width: calc(100% - 4px);
		}
		&:checked {
			border-color: cssvar(primary-color);
			&::before {
				opacity: 1;
				visibility: visible;
			}
		}
	}
	
	input[type="radio"],
	input[type="radio"]:checked::before{
		border-radius: 100%;
	}
	
	// toggle
	
	input[type="checkbox"][data-checkbox-toggle] {
		border-radius: 25px;
		height: cssvar(input-switch-size);
		cursor: pointer;
		width: calc(#{cssvar(input-switch-size)} * 2);
		&::before {
			top: 2px;
			left: 2px;
			content: "";
			opacity: 1;
			visibility: visible;
			position: absolute;
			border-radius: 100%;
			height: calc(100% - 4px);
			width: calc( #{cssvar(input-switch-size)} - (#{cssvar(input-switch-border-width)} * 2) - 4px );
			background-color: cssvar(input-border-color);
		}
		&:checked {
			border-color: cssvar(input-border-color);
			&::before {
				content: "";
				top: 2px;
				left: calc(#{cssvar(input-switch-size)} + 2px);
				background-color: cssvar(primary-color);
			}
		}
	}
	
	// range input
	
	input[type="range"] {
		width: 100%;
		appearance: none;
		position: relative;
		background: transparent;
		display: flex;
		align-items: center;
		height: cssvar(input-switch-size);
		line-height: cssvar(input-height);
		&::-moz-focus-outer {
			border: 0;
		}
		@each $vendor in (-ms-track, -moz-range-track, -webkit-slider-runnable-track) {
			&::#{$vendor} {
				cursor: default;
				width: 100%;
				background: transparent;
				height: cssvar(input-switch-border-width);
				background-color: cssvar(input-border-color);
			}
			&:focus {
				outline: 0;
				&::#{$vendor} {
					background-color: cssvar(primary-color);
				}
			}			
		}
		@each $vendor in (-ms-thumb, -moz-range-thumb, -webkit-slider-thumb) {
			&::#{$vendor} {
				width: cssvar(input-switch-size);
				height: cssvar(input-switch-size);
				cursor: default;
				appearance: none;
				border-radius: 100%;
				margin-top: calc(((#{cssvar(input-switch-size)} / 2) - #{cssvar(input-switch-border-width)} / 2 ) * -1);
				border: 2px solid rgba(100,100,100,.1);
				background: cssvar(primary-color);
			}
		}
		&::-ms-fill-lower {
			appearance: none;
		}
		&::-ms-fill-upper {
			appearance: none;
		}
		&[data-subs] {
			&::after,
			&::before {
				font-weight: 600;
				color: cssvar(app-text-color);
			}
			&::before {
				content: attr(min);
				margin-right: 6px;
			}
			&::after {
				content: attr(max);
				margin-left: 6px;
			}
			&:focus {
				&::after,
				&::before {
					color: cssvar(primary-color);
				}
			}
		}
	}
	
	// progress & meter
	
	progress, meter {
		width: 100%;
		height: 12px;
		display: block;
		overflow: hidden;
		border-radius: 25px;
		@each $vendor in (-webkit-meter-optimum-value, -moz-meter-optimum, -webkit-progress-value) {
			&::#{$vendor} {
				border-radius: 25px;
				background: linear-gradient(30deg, #{cssvar(primary-color)} 0%, #{cssvar(secondary-color)} 100%);
			}
		}
	}
	
	// input file
	
	.input-file {
		cursor: pointer;
		position: relative;
		display: inline-flex;
		align-items: center;
		justify-content: center;
		margin-bottom: cssvar(button-margin-bottom);
		input[type="file"] {
			top: 0;
			left: 0;
			opacity: 0;
			width: 100%;
			height: 100%;
			cursor: pointer;
			position: absolute;
		}
	}
	
	// success / error / warning
	
	@each $state in (success, error, warning, info) {
		
		[data-#{$state}] {
			@include cssvar(input-border-color, cssvar(color-#{$state}));
			@include cssvar(primary-color, cssvar(color-#{$state}));
			label:not([data-holder]) {
				color: cssvar(color-#{$state});
			}
		}
		
		[data-#{$state}]:not([data-#{$state}=""]) {
			&::after {
				margin: 4px 0;
				display: block;
				font-weight: 600;
				content: attr(data-#{$state});
				color: cssvar(color-#{$state});
				font-size: cssvar(form-caption-font-size);
			}
		}
	}

	[data-info]:not([data-info=""]) label {
		color: cssvar(app-text-color);
	}
	
	::placeholder {
		font-size: inherit;
		color: cssvar(placeholder-color);
	}
}
