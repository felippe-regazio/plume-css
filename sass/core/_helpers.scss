/**
 * The superclass is the appliaction root class that
 * wraps and scope the lib selectors. Use this class
 * to wrap the modules in a superclass preserving the
 * outer scope from the lib effects
 */
@mixin superclass () {

	$superclass: 'plume' !default;

	.#{$superclass} {
		@content;
	}
}

/**
* Use this mixin to declare a set of CSS Custom Properties.
* The variables in $css_variables will be properly prefixed.
* The use of this mixin is encoraged to keep a good scalability.
*/
@mixin cssvars($css_variables) {
	:root {
		@each $name, $value in $css_variables {
			--#{$name}: #{$value};
		}
	}
}

/**
* This mixin is used to change a CSS property value.
* It will change a declared css variable auto-prefixing it.
*/
@mixin cssvar ($name, $value: '') {
	--#{$name}: #{$value};
}
	
/**
* Retrieve a css variable value with already autoprefixed.
* Use the mixin if you want to change the variable value.
*/
@function cssvar($name) {
	@return var(--#{$name});
}
